#include <click/config.h>
#include <click/args.hh>
#include "castor_debug_no_loopback.hh"
#include "../castor_anno.hh"

CLICK_DECLS

int CastorDebugNoLoopback::configure(Vector<String> &conf, ErrorHandler *errh) {
	return Args(conf, this, errh)
			.read_mp("CastorHistory", ElementCastArg("CastorHistory"), history)
			.read_mp("ID", id)
			.complete();
}

void CastorDebugNoLoopback::push(int, Packet* p) {
	const CastorAck& ack = *reinterpret_cast<const CastorAck*>(p->data());
	// FIXME: in how far is this different to CastorNoLoopback?
	const PacketId& pid = ack.auth;
	click_chatter("debug_no_loopback: pid= %lx", pid);
	if(history->hasPktFrom(pid, id))
		output(1).push(p);  // ACK arrived at source of corresponding PKT
	else
		output(0).push(p);  // ACK arrived at intermediate network node
}

CLICK_ENDDECLS
EXPORT_ELEMENT(CastorDebugNoLoopback)
